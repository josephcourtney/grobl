[project]
  name = "grobl-workspace"
  version = "0.8.0"
  requires-python = ">=3.12"
  dependencies = [
    "grobl",
    "grobl-config",
    "grobl-cli",
  ]

  [project.scripts]
    grobl = "grobl_cli.cli:main"

[tool.uv.workspace]
  members = [
    "grobl",
    "grobl-config",
    "grobl-cli",
  ]

[tool.uv.sources]
  grobl-config = { workspace = true }
  grobl-cli    = { workspace = true }
  grobl        = { workspace = true }

[build-system]
  requires      = ["uv_build>=0.9.3,<0.10.0"]
  build-backend = "uv_build"

[dependency-groups]
  dev = [
    "coverage>=7.11.0",
    "hypothesis>=6.141.0",
    "mutmut>=3.3.1",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-randomly>=4.0.1",
    "ruff>=0.14.0",
    "ty>=0.0.1a22",
  ]

# ==================================== lint ====================================
[tool.ruff]
  extend = "./ruff.default.toml"
  include = [
    "pyproject.toml",
    "src/**/*.py",
    "scripts/**/*.py",
    "*/src/**/*.py",
    "*/scripts/**/*.py",
  ]

  [tool.ruff.lint]
    ignore = [
      # "TD002",  # Missing author in TODO; try: `# TODO(<author_name>): ...` or `# TODO @<author_name>: ...`
      # "TD003",  # Missing issue link for this TODO
      # "FIX002", # Line contains TODO, consider resolving the issue
    ]

# =================================== test ===================================
# ---------------- pytest (root) ----------------
# Ensure multi-package tests can co-exist without import collisions.
# Explicitly set import mode and test paths across subprojects.
[tool.pytest.ini_options]
  addopts = [
    "--import-mode=importlib",
    "--cov-branch",
    "--cov-report=xml",
  ]
  testpaths = [
    "tests",
    "grobl/tests",
    "grobl-cli/tests",
    "grobl-config/tests",
  ]
  markers = [
    "perf: performance tests",
  ]

# =================================== test:coverage ===================================
[tool.coverage.run]
  branch   = true
  parallel = true

[tool.coverage.report]
  show_missing = false
  skip_covered = true
  # Regexes for lines to exclude from consideration
  exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
  ]
  ignore_errors = true

[tool.coverage.xml]
  output = ".coverage.xml"


# =================================== typechecking ===================================
[tool.ty.environment]
  root = [
    ".",                # repository root for top-level packages like `tests`
    "src",              # root-level (if any)
    "grobl/src",        # grobl package
    "grobl-cli/src",    # CLI package
    "grobl-config/src", # config helpers
    "tests",            # shared test utilities
  ]
